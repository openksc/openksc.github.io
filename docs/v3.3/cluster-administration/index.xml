<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Cluster Administration on</title><link>https://openksc.github.io/docs/v3.3/cluster-administration/</link><description>Recent content in Cluster Administration on</description><generator>Hugo</generator><language>en-US</language><atom:link href="https://openksc.github.io/docs/v3.3/cluster-administration/index.xml" rel="self" type="application/rss+xml"/><item><title>Node Management</title><link>https://openksc.github.io/docs/v3.3/cluster-administration/nodes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://openksc.github.io/docs/v3.3/cluster-administration/nodes/</guid><description>&lt;p>Kubernetes runs your workloads by placing containers into Pods to run on nodes. A node may be a virtual or physical machine, depending on the cluster. Each node contains the services necessary to run Pods, managed by the control plane. For more information about nodes, see the &lt;a href="https://kubernetes.io/docs/concepts/architecture/nodes/" target="_blank" rel="noopener noreferrer">official documentation of Kubernetes&lt;/a>.&lt;/p>
&lt;p>This tutorial demonstrates what a cluster administrator can view and do for nodes within a cluster.&lt;/p>
&lt;h2 id="prerequisites">Prerequisites&lt;/h2>
&lt;p>You need a user granted a role including the authorization of &lt;strong>Cluster Management&lt;/strong>. For example, you can log in to the console as &lt;code>admin&lt;/code> directly or create a new role with the authorization and assign it to a user.&lt;/p></description></item><item><title>Cluster Status Monitoring</title><link>https://openksc.github.io/docs/v3.3/cluster-administration/cluster-status-monitoring/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://openksc.github.io/docs/v3.3/cluster-administration/cluster-status-monitoring/</guid><description>&lt;p>KubeSphere provides monitoring of related metrics such as CPU, memory, network, and disk of the cluster. You can also review historical monitoring data and sort nodes by different indicators based on their usage in &lt;strong>Cluster Status&lt;/strong>.&lt;/p>
&lt;h2 id="prerequisites">Prerequisites&lt;/h2>
&lt;p>You need a user granted a role including the authorization of &lt;strong>Cluster Management&lt;/strong>. For example, you can log in to the console as &lt;code>admin&lt;/code> directly or create a new role with the authorization and assign it to a user.&lt;/p></description></item><item><title>Application Resources Monitoring</title><link>https://openksc.github.io/docs/v3.3/cluster-administration/application-resources-monitoring/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://openksc.github.io/docs/v3.3/cluster-administration/application-resources-monitoring/</guid><description>&lt;p>In addition to monitoring data at the physical resource level, cluster administrators also need to keep a close track of application resources across the platform, such as the number of projects and DevOps projects, as well as the number of workloads and services of a specific type. Application resource monitoring provides a summary of resource usage and application-level trends of the platform.&lt;/p>
&lt;h2 id="prerequisites">Prerequisites&lt;/h2>
&lt;p>You need a user granted a role including the authorization of &lt;strong>Cluster Management&lt;/strong>. For example, you can log in to the console as &lt;code>admin&lt;/code> directly or create a new role with the authorization and assign it to a user.&lt;/p></description></item><item><title>Cluster Shutdown and Restart</title><link>https://openksc.github.io/docs/v3.3/cluster-administration/shut-down-and-restart-cluster-gracefully/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://openksc.github.io/docs/v3.3/cluster-administration/shut-down-and-restart-cluster-gracefully/</guid><description>&lt;p>This document describes the process of gracefully shutting down your Kubernetes cluster and how to restart it. You might need to temporarily shut down your cluster for maintenance reasons.&lt;/p>
&lt;div class="notices warning">
 
 &lt;p>Warning&lt;/p>
 &lt;div>Shutting down a cluster is very dangerous. You must fully understand the operation and its consequences. Please make an etcd backup before you proceed.
Usually, it is recommended to maintain your nodes one by one instead of restarting the whole cluster.&lt;/div>
&lt;/div>
&lt;h2 id="prerequisites">Prerequisites&lt;/h2>
&lt;ul>
&lt;li>Take an &lt;a href="https://etcd.io/docs/current/op-guide/recovery/#snapshotting-the-keyspace" target="_blank" rel="noopener noreferrer">etcd backup&lt;/a> prior to shutting down a cluster.&lt;/li>
&lt;li>SSH &lt;a href="https://man.openbsd.org/ssh.1#AUTHENTICATION" target="_blank" rel="noopener noreferrer">passwordless login&lt;/a> is set up between hosts.&lt;/li>
&lt;/ul>
&lt;h2 id="shut-down-a-kubernetes-cluster">Shut Down a Kubernetes Cluster&lt;/h2>
&lt;div class="notices tip">
 
 &lt;p>Tip&lt;/p></description></item><item><title>Storage Classes</title><link>https://openksc.github.io/docs/v3.3/cluster-administration/storageclass/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://openksc.github.io/docs/v3.3/cluster-administration/storageclass/</guid><description>&lt;p>This tutorial demonstrates how a cluster administrator can manage storage classes and persistent volumes in KubeSphere.&lt;/p>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>A Persistent Volume (PV) is a piece of storage in the cluster that has been provisioned by an administrator or dynamically provisioned using storage classes. PVs are volume plugins like volumes, but have a lifecycle independent of any individual Pod that uses the PV. PVs can be provisioned either &lt;a href="https://kubernetes.io/docs/concepts/storage/persistent-volumes/#static" target="_blank" rel="noopener noreferrer">statically&lt;/a> or &lt;a href="https://kubernetes.io/docs/concepts/storage/persistent-volumes/#dynamic" target="_blank" rel="noopener noreferrer">dynamically&lt;/a>.&lt;/p>
&lt;p>A Persistent Volume Claim (PVC) is a request for storage by a user. It is similar to a Pod. Pods consume node resources and PVCs consume PV resources.&lt;/p></description></item><item><title>Volume Snapshot Classes</title><link>https://openksc.github.io/docs/v3.3/cluster-administration/snapshotclass/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://openksc.github.io/docs/v3.3/cluster-administration/snapshotclass/</guid><description>&lt;p>Volume snapshot classes provide a way for administrators to define storage types used for volume snapshots. This tutorial describes how to create and use snapshot classes.&lt;/p>
&lt;h2 id="prerequisites">Prerequisites&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>You need to create a workspace, a project and a user (&lt;code>project-regular&lt;/code>). The user must be invited to the project with the role of &lt;code>operator&lt;/code>. For more information, see &lt;a href="../../../quick-start/create-workspace-and-project/">Create Workspaces, Projects, Users and Roles&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>You need to install Kubernetes 1.17 or higher.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Your underlying storage plugin supports snapshots.&lt;/p></description></item></channel></rss>