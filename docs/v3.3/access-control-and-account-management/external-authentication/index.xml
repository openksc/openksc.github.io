<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>External Authentication on</title><link>https://openksc.github.io/docs/v3.3/access-control-and-account-management/external-authentication/</link><description>Recent content in External Authentication on</description><generator>Hugo</generator><language>en-US</language><atom:link href="https://openksc.github.io/docs/v3.3/access-control-and-account-management/external-authentication/index.xml" rel="self" type="application/rss+xml"/><item><title>Set Up External Authentication</title><link>https://openksc.github.io/docs/v3.3/access-control-and-account-management/external-authentication/set-up-external-authentication/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://openksc.github.io/docs/v3.3/access-control-and-account-management/external-authentication/set-up-external-authentication/</guid><description>&lt;p>This document describes how to use an external identity provider such as an LDAP service or Active Directory service on KubeSphere.&lt;/p>
&lt;p>KubeSphere provides a built-in OAuth server. Users can obtain OAuth access tokens to authenticate themselves to the KubeSphere API. As a KubeSphere administrator, you can edit &lt;code>ks-installer&lt;/code> of the CRD &lt;code>ClusterConfiguration&lt;/code> to configure OAuth and specify identity providers.&lt;/p>
&lt;h2 id="prerequisites">Prerequisites&lt;/h2>
&lt;p>You need to deploy a Kubernetes cluster and install KubeSphere in the cluster. For details, see &lt;a href="https://openksc.github.io/docs/v3.3/installing-on-linux/">Installing on Linux&lt;/a> and &lt;a href="https://openksc.github.io/docs/v3.3/installing-on-kubernetes/">Installing on Kubernetes&lt;/a>.&lt;/p></description></item><item><title>Use an LDAP Service</title><link>https://openksc.github.io/docs/v3.3/access-control-and-account-management/external-authentication/use-an-ldap-service/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://openksc.github.io/docs/v3.3/access-control-and-account-management/external-authentication/use-an-ldap-service/</guid><description>&lt;p>This document describes how to use an LDAP service as an external identity provider, which allows you to authenticate users against the LDAP service.&lt;/p>
&lt;h2 id="prerequisites">Prerequisites&lt;/h2>
&lt;ul>
&lt;li>You need to deploy a Kubernetes cluster and install KubeSphere in the cluster. For details, see &lt;a href="https://openksc.github.io/docs/v3.3/installing-on-linux/">Installing on Linux&lt;/a> and &lt;a href="https://openksc.github.io/docs/v3.3/installing-on-kubernetes/">Installing on Kubernetes&lt;/a>.&lt;/li>
&lt;li>You need to obtain the manager distinguished name (DN) and manager password of an LDAP service.&lt;/li>
&lt;/ul>
&lt;h2 id="procedure">Procedure&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Log in to KubeSphere as &lt;code>admin&lt;/code>, move the cursor to &lt;img src="https://openksc.github.io/images/docs/v3.x/access-control-and-account-management/external-authentication/set-up-external-authentication/toolbox.png" width="20px" height="20px" alt="icon"> in the lower-right corner, click &lt;strong>kubectl&lt;/strong>, and run the following command to edit &lt;code>ks-installer&lt;/code> of the CRD &lt;code>ClusterConfiguration&lt;/code>:&lt;/p></description></item><item><title>OIDC Identity Provider</title><link>https://openksc.github.io/docs/v3.3/access-control-and-account-management/external-authentication/oidc-identity-provider/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://openksc.github.io/docs/v3.3/access-control-and-account-management/external-authentication/oidc-identity-provider/</guid><description>&lt;h2 id="oidc-identity-provider">OIDC Identity Provider&lt;/h2>
&lt;p>&lt;a href="https://openid.net/connect/" target="_blank" rel="noopener noreferrer">OpenID Connect&lt;/a> is an interoperable authentication protocol based on the OAuth 2.0 family of specifications. It uses straightforward REST/JSON message flows with a design goal of “making simple things simple and complicated things possible”. It’s uniquely easy for developers to integrate, compared to any preceding Identity protocol, such as Keycloak, Okta, Dex, Auth0, Gluu, Casdoor and many more.&lt;/p>
&lt;h2 id="prerequisites">Prerequisites&lt;/h2>
&lt;p>You need to deploy a Kubernetes cluster and install KubeSphere in the cluster. For details, see &lt;a href="https://openksc.github.io/docs/v3.3/installing-on-linux/">Installing on Linux&lt;/a> and &lt;a href="https://openksc.github.io/docs/v3.3/installing-on-kubernetes/">Installing on Kubernetes&lt;/a>.&lt;/p></description></item><item><title>Use an OAuth 2.0 Identity Provider</title><link>https://openksc.github.io/docs/v3.3/access-control-and-account-management/external-authentication/use-an-oauth2-identity-provider/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://openksc.github.io/docs/v3.3/access-control-and-account-management/external-authentication/use-an-oauth2-identity-provider/</guid><description>&lt;p>This document describes how to use an external identity provider based on the OAuth 2.0 protocol.&lt;/p>
&lt;p>The following figure shows the authentication process between KubeSphere and an external OAuth 2.0 identity provider.&lt;/p>
&lt;p>&lt;img src="https://openksc.github.io/images/docs/v3.x/access-control-and-account-management/external-authentication/use-an-oauth2-identity-provider/oauth2.svg" alt="oauth2">&lt;/p>
&lt;h2 id="prerequisites">Prerequisites&lt;/h2>
&lt;p>You need to deploy a Kubernetes cluster and install KubeSphere in the cluster. For details, see &lt;a href="https://openksc.github.io/docs/v3.3/installing-on-linux/">Installing on Linux&lt;/a> and &lt;a href="https://openksc.github.io/docs/v3.3/installing-on-kubernetes/">Installing on Kubernetes&lt;/a>.&lt;/p>
&lt;h2 id="develop-an-oauth-20-plugin">Develop an OAuth 2.0 Plugin&lt;/h2>
&lt;div class="notices note">
 
 &lt;p>Note&lt;/p>
 &lt;div>KubeSphere provides two built-in OAuth 2.0 plugins: &lt;a href="https://github.com/kubesphere/kubesphere/blob/release-3.1/pkg/apiserver/authentication/identityprovider/github/github.go" target="_blank" rel="noopener noreferrer">GitHubIdentityProvider&lt;/a> for GitHub and &lt;a href="https://github.com/kubesphere/kubesphere/blob/release-3.1/pkg/apiserver/authentication/identityprovider/github/github.go" target="_blank" rel="noopener noreferrer">AliyunIDaasProvider&lt;/a> for Alibaba Cloud IDaaS. You can develop other plugins according to the built-in plugins.&lt;/div>
&lt;/div>
&lt;ol>
&lt;li>
&lt;p>Clone the &lt;a href="https://github.com/kubesphere/kubesphere" target="_blank" rel="noopener noreferrer">KubeSphere repository&lt;/a> on your local machine, go to the local KubeSphere repository, and create a package for your plugin in the &lt;code>/pkg/apiserver/authentication/identityprovider/&lt;/code> directory.&lt;/p></description></item></channel></rss>