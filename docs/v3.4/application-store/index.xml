<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>App Store on</title><link>https://openksc.github.io/docs/v3.4/application-store/</link><description>Recent content in App Store on</description><generator>Hugo</generator><language>en-US</language><atom:link href="https://openksc.github.io/docs/v3.4/application-store/index.xml" rel="self" type="application/rss+xml"/><item><title>Kubernetes Application Lifecycle Management</title><link>https://openksc.github.io/docs/v3.4/application-store/app-lifecycle-management/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://openksc.github.io/docs/v3.4/application-store/app-lifecycle-management/</guid><description>&lt;p>KubeSphere integrates &lt;a href="https://github.com/openpitrix/openpitrix" target="_blank" rel="noopener noreferrer">OpenPitrix&lt;/a>, an open-source multi-cloud application management platform, to set up the App Store, managing Kubernetes applications throughout their entire lifecycle. The App Store supports two kinds of application deployment:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Template-Based Apps&lt;/strong> provide a way for developers and independent software vendors (ISVs) to share applications with users in a workspace. You can also import third-party app repositories within a workspace.&lt;/li>
&lt;li>&lt;strong>Composed Apps&lt;/strong> help users quickly build a complete application using multiple microservices to compose it. KubeSphere allows users to select existing services or create new services to create a composed app on the one-stop console.&lt;/li>
&lt;/ul>
&lt;p>Using &lt;a href="https://redis.io/" target="_blank" rel="noopener noreferrer">Redis&lt;/a> as an example application, this tutorial demonstrates how to manage the Kubernetes app throughout the entire lifecycle, including submission, review, test, release, upgrade and removal.&lt;/p></description></item></channel></rss>