<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Storage System Installation on</title><link>https://openksc.github.io/docs/v3.4/reference/storage-system-installation/</link><description>Recent content in Storage System Installation on</description><generator>Hugo</generator><language>en-US</language><atom:link href="https://openksc.github.io/docs/v3.4/reference/storage-system-installation/index.xml" rel="self" type="application/rss+xml"/><item><title>Set up an NFS Server</title><link>https://openksc.github.io/docs/v3.4/reference/storage-system-installation/nfs-server/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://openksc.github.io/docs/v3.4/reference/storage-system-installation/nfs-server/</guid><description>&lt;p>KubeSphere supports &lt;a href="https://github.com/kubernetes-incubator/external-storage/tree/master/nfs-client" target="_blank" rel="noopener noreferrer">NFS-client Provisioner&lt;/a> as a storage plugin. In order to use it, you must configure the NFS server in advance. With the NFS server in place, an NFS client mounts a directory on the server machine so that files residing on the NFS server are accessible to the NFS client. Namely, you need to create and export a directory that your client machine can access.&lt;/p>
&lt;p>Once your NFS server machine is ready, you can use &lt;a href="../../../installing-on-linux/introduction/kubekey/">KubeKey&lt;/a> to install NFS-client Provisioner by Helm charts together with Kubernetes and KubeSphere. The exported directory of your NFS server must be provided in your Chart configurations used by KubeKey during installation.&lt;/p></description></item><item><title>Set up a GlusterFS Server</title><link>https://openksc.github.io/docs/v3.4/reference/storage-system-installation/glusterfs-server/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://openksc.github.io/docs/v3.4/reference/storage-system-installation/glusterfs-server/</guid><description>&lt;p>As an open-source distributed file system, &lt;a href="https://kubernetes.io/docs/concepts/storage/volumes/#glusterfs" target="_blank" rel="noopener noreferrer">GlusterFS&lt;/a> allows you to mount &lt;code>glusterfs&lt;/code> volumes to your Pods. If a &lt;code>glusterfs&lt;/code> volume is pre-populated with data, they can be shared among your Pods in a Kubernetes cluster.&lt;/p>
&lt;p>This tutorial demonstrates how to configure GlusterFS on three server machines and install &lt;a href="https://github.com/heketi/heketi" target="_blank" rel="noopener noreferrer">Heketi&lt;/a> to manage your GlusterFS cluster.&lt;/p>
&lt;p>Once you have GlusterFS and Heketi set up, you can install GlusterFS on your client machine and use KubeKey to create a KubeSphere cluster with GlusterFS as a storage class.&lt;/p></description></item></channel></rss>